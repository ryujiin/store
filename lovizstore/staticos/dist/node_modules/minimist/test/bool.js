var parse=require("../"),test=require("tape");test("flag boolean default false",function(e){var t=parse(["moo"],{"boolean":["t","verbose"],"default":{verbose:!1,t:!1}});e.deepEqual(t,{verbose:!1,t:!1,_:["moo"]}),e.deepEqual(typeof t.verbose,"boolean"),e.deepEqual(typeof t.t,"boolean"),e.end()}),test("boolean groups",function(e){var t=parse(["-x","-z","one","two","three"],{"boolean":["x","y","z"]});e.deepEqual(t,{x:!0,y:!1,z:!0,_:["one","two","three"]}),e.deepEqual(typeof t.x,"boolean"),e.deepEqual(typeof t.y,"boolean"),e.deepEqual(typeof t.z,"boolean"),e.end()}),test("boolean and alias with chainable api",function(e){var t=["-h","derp"],n=["--herp","derp"],r={herp:{alias:"h","boolean":!0}},i=parse(t,{"boolean":"herp",alias:{h:"herp"}}),s=parse(n,{"boolean":"herp",alias:{h:"herp"}}),o={herp:!0,h:!0,_:["derp"]};e.same(i,o),e.same(s,o),e.end()}),test("boolean and alias with options hash",function(e){var t=["-h","derp"],n=["--herp","derp"],r={alias:{h:"herp"},"boolean":"herp"},i=parse(t,r),s=parse(n,r),o={herp:!0,h:!0,_:["derp"]};e.same(i,o),e.same(s,o),e.end()}),test("boolean and alias using explicit true",function(e){var t=["-h","true"],n=["--herp","true"],r={alias:{h:"herp"},"boolean":"h"},i=parse(t,r),s=parse(n,r),o={herp:!0,h:!0,_:[]};e.same(i,o),e.same(s,o),e.end()}),test("boolean and --x=true",function(e){var t=parse(["--boool","--other=true"],{"boolean":"boool"});e.same(t.boool,!0),e.same(t.other,"true"),t=parse(["--boool","--other=false"],{"boolean":"boool"}),e.same(t.boool,!0),e.same(t.other,"false"),e.end()});